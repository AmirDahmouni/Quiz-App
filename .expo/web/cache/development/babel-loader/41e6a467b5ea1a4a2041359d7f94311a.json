{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _constants = require(\"../constants\");\n\nvar _MaterialCommunityIcons = _interopRequireDefault(require(\"react-native-vector-icons/MaterialCommunityIcons\"));\n\nvar _GlobalContext = _interopRequireDefault(require(\"../GlobalContext\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Amir\\\\react-native-quiz-app\\\\app\\\\screens\\\\Quiz.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Quiz = function Quiz() {\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      allQuestions = _useState2[0],\n      setallQuestions = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    var result = _axios.default.get(\"http://192.168.1.141:3900/api/questions/\").then(function (_ref) {\n      var data = _ref.data;\n      setallQuestions(data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n\n    console.log(context);\n  }, []);\n\n  var context = _react.default.useContext(_GlobalContext.default);\n\n  var _useState3 = (0, _react.useState)(0),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      currentQuestionIndex = _useState4[0],\n      setCurrentQuestionIndex = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(null),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      currentOptionSelected = _useState6[0],\n      setCurrentOptionSelected = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(null),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      correctOption = _useState8[0],\n      setCorrectOption = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(false),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      isOptionsDisabled = _useState10[0],\n      setIsOptionsDisabled = _useState10[1];\n\n  var _useState11 = (0, _react.useState)(0),\n      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n      score = _useState12[0],\n      setScore = _useState12[1];\n\n  var _useState13 = (0, _react.useState)(false),\n      _useState14 = (0, _slicedToArray2.default)(_useState13, 2),\n      showNextButton = _useState14[0],\n      setShowNextButton = _useState14[1];\n\n  var _useState15 = (0, _react.useState)(false),\n      _useState16 = (0, _slicedToArray2.default)(_useState15, 2),\n      showScoreModal = _useState16[0],\n      setShowScoreModal = _useState16[1];\n\n  var validateAnswer = function validateAnswer(selectedOption) {\n    var correct_option = allQuestions[currentQuestionIndex]['correct_option'];\n    setCurrentOptionSelected(selectedOption);\n    setCorrectOption(correct_option);\n    setIsOptionsDisabled(true);\n\n    if (selectedOption == correct_option) {\n      setScore(score + allQuestions[currentQuestionIndex]['correct_score']);\n    }\n\n    setShowNextButton(true);\n  };\n\n  var handleNext = function handleNext() {\n    if (currentQuestionIndex == allQuestions.length - 1) {\n      setShowScoreModal(true);\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setCurrentOptionSelected(null);\n      setCorrectOption(null);\n      setIsOptionsDisabled(false);\n      setShowNextButton(false);\n    }\n\n    _reactNative.Animated.timing(progress, {\n      toValue: currentQuestionIndex + 1,\n      duration: 1000,\n      useNativeDriver: false\n    }).start();\n  };\n\n  var restartQuiz = function restartQuiz() {\n    setShowScoreModal(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setCurrentOptionSelected(null);\n    setCorrectOption(null);\n    setIsOptionsDisabled(false);\n    setShowNextButton(false);\n\n    _reactNative.Animated.timing(progress, {\n      toValue: 0,\n      duration: 1000,\n      useNativeDriver: false\n    }).start();\n  };\n\n  var renderQuestion = function renderQuestion() {\n    var _allQuestions$current;\n\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        marginVertical: 40\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'flex-end'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: {\n        color: _constants.COLORS.white,\n        fontSize: 20,\n        opacity: 0.6,\n        marginRight: 2\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, currentQuestionIndex + 1), _react.default.createElement(_reactNative.Text, {\n      style: {\n        color: _constants.COLORS.white,\n        fontSize: 18,\n        opacity: 0.6\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, \"/ \", allQuestions.length)), _react.default.createElement(_reactNative.Text, {\n      style: {\n        color: _constants.COLORS.white,\n        fontSize: 30\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, (_allQuestions$current = allQuestions[currentQuestionIndex]) == null ? void 0 : _allQuestions$current.question));\n  };\n\n  var renderOptions = function renderOptions() {\n    var _allQuestions$current2;\n\n    return _react.default.createElement(_reactNative.View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, (_allQuestions$current2 = allQuestions[currentQuestionIndex]) == null ? void 0 : _allQuestions$current2.options.map(function (option) {\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          return validateAnswer(option);\n        },\n        disabled: isOptionsDisabled,\n        key: option,\n        style: {\n          borderWidth: 3,\n          borderColor: option == correctOption ? _constants.COLORS.success : option == currentOptionSelected ? _constants.COLORS.error : _constants.COLORS.secondary + '40',\n          backgroundColor: option == correctOption ? _constants.COLORS.success + '20' : option == currentOptionSelected ? _constants.COLORS.error + '20' : _constants.COLORS.secondary + '20',\n          height: 60,\n          borderRadius: 20,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          paddingHorizontal: 20,\n          marginVertical: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          fontSize: 20,\n          color: _constants.COLORS.white\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }\n      }, option), option == correctOption ? _react.default.createElement(_reactNative.View, {\n        style: {\n          width: 30,\n          height: 30,\n          borderRadius: 30 / 2,\n          backgroundColor: _constants.COLORS.success,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 37\n        }\n      }, _react.default.createElement(_MaterialCommunityIcons.default, {\n        name: \"check\",\n        style: {\n          color: _constants.COLORS.white,\n          fontSize: 20\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 41\n        }\n      })) : option == currentOptionSelected ? _react.default.createElement(_reactNative.View, {\n        style: {\n          width: 30,\n          height: 30,\n          borderRadius: 30 / 2,\n          backgroundColor: _constants.COLORS.error,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 37\n        }\n      }, _react.default.createElement(_MaterialCommunityIcons.default, {\n        name: \"close\",\n        style: {\n          color: _constants.COLORS.white,\n          fontSize: 20\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 41\n        }\n      })) : null);\n    }));\n  };\n\n  var renderNextButton = function renderNextButton() {\n    if (showNextButton) {\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: handleNext,\n        style: {\n          marginTop: 20,\n          width: '100%',\n          backgroundColor: _constants.COLORS.accent,\n          padding: 20,\n          borderRadius: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          fontSize: 20,\n          color: _constants.COLORS.white,\n          textAlign: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      }, \"Next\"));\n    } else {\n      return null;\n    }\n  };\n\n  var _useState17 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n      _useState18 = (0, _slicedToArray2.default)(_useState17, 2),\n      progress = _useState18[0],\n      setProgress = _useState18[1];\n\n  var progressAnim = progress.interpolate({\n    inputRange: [0, allQuestions.length],\n    outputRange: ['0%', '100%']\n  });\n\n  var renderProgressBar = function renderProgressBar() {\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        width: '100%',\n        height: 20,\n        borderRadius: 20,\n        backgroundColor: '#00000020'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNative.Animated.View, {\n      style: [{\n        height: 20,\n        borderRadius: 20,\n        backgroundColor: _constants.COLORS.accent\n      }, {\n        width: progressAnim\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  return _react.default.createElement(_reactNative.SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 12\n    }\n  }, _react.default.createElement(_reactNative.StatusBar, {\n    barStyle: \"light-content\",\n    backgroundColor: _constants.COLORS.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 12\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1,\n      paddingVertical: 40,\n      paddingHorizontal: 16,\n      backgroundColor: _constants.COLORS.background,\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 12\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: {\n      fontSize: 40,\n      fontWeight: 'bold',\n      textAlign: \"center\",\n      color: _constants.COLORS.secondary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 16\n    }\n  }, \"Your Score \"), _react.default.createElement(_reactNative.Text, {\n    style: {\n      fontSize: 40,\n      fontWeight: 'bold',\n      textAlign: \"center\",\n      color: _constants.COLORS.error\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 16\n    }\n  }, context.user.score), renderProgressBar(), renderQuestion(), renderOptions(), renderNextButton(), _react.default.createElement(_reactNative.Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: showScoreModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 16\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1,\n      backgroundColor: _constants.COLORS.primary,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 20\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      backgroundColor: _constants.COLORS.white,\n      width: '90%',\n      borderRadius: 20,\n      padding: 20,\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 24\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: {\n      fontSize: 40,\n      fontWeight: 'bold',\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 28\n    }\n  }, score > allQuestions.length / 2 ? 'Congratulations! your score' : 'Oops!'), _react.default.createElement(_reactNative.View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      marginVertical: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 28\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: {\n      fontSize: 30,\n      color: score > allQuestions.length / 2 ? _constants.COLORS.success : _constants.COLORS.error\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 32\n    }\n  }, score), _react.default.createElement(_reactNative.Text, {\n    style: {\n      fontSize: 20,\n      color: _constants.COLORS.black\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 33\n    }\n  }, \"/ \", allQuestions.length)), _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: restartQuiz,\n    style: {\n      backgroundColor: _constants.COLORS.accent,\n      padding: 20,\n      width: '100%',\n      borderRadius: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 28\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: {\n      textAlign: 'center',\n      color: _constants.COLORS.white,\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 32\n    }\n  }, \"Retry Quiz\"))))), _react.default.createElement(_reactNative.Image, {\n    source: require('../assets/images/DottedBG.png'),\n    style: {\n      width: _constants.SIZES.width,\n      height: 130,\n      zIndex: -1,\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      right: 0,\n      opacity: 0.5\n    },\n    resizeMode: 'contain',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 16\n    }\n  })));\n};\n\nvar _default = Quiz;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Amir/react-native-quiz-app/app/screens/Quiz.js"],"names":["Quiz","allQuestions","setallQuestions","result","axios","get","then","data","catch","err","console","log","context","React","useContext","GlobalContext","currentQuestionIndex","setCurrentQuestionIndex","currentOptionSelected","setCurrentOptionSelected","correctOption","setCorrectOption","isOptionsDisabled","setIsOptionsDisabled","score","setScore","showNextButton","setShowNextButton","showScoreModal","setShowScoreModal","validateAnswer","selectedOption","correct_option","handleNext","length","Animated","timing","progress","toValue","duration","useNativeDriver","start","restartQuiz","renderQuestion","marginVertical","flexDirection","alignItems","color","COLORS","white","fontSize","opacity","marginRight","question","renderOptions","options","map","option","borderWidth","borderColor","success","error","secondary","backgroundColor","height","borderRadius","justifyContent","paddingHorizontal","width","renderNextButton","marginTop","accent","padding","textAlign","Value","setProgress","progressAnim","interpolate","inputRange","outputRange","renderProgressBar","flex","primary","paddingVertical","background","position","fontWeight","user","black","require","SIZES","zIndex","bottom","left","right"],"mappings":"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","sourcesContent":["import React, { useState,useEffect,useContext } from 'react'\r\nimport { View, Text, SafeAreaView, StatusBar, Image, TouchableOpacity, Modal, Animated } from 'react-native'\r\nimport { COLORS, SIZES } from '../constants';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport GlobalContext from '../GlobalContext';\r\nimport axios from \"axios\"\r\nconst Quiz = () => {\r\n\r\n    const [allQuestions, setallQuestions] = useState([]);\r\n    useEffect(()=>{\r\n        const result=axios.get(\"http://192.168.1.141:3900/api/questions/\").then(({data}) => {\r\n            setallQuestions(data)\r\n        }).catch(err=>console.log(err))\r\n        console.log(context)\r\n    },[])\r\n\r\n    const context = React.useContext(GlobalContext)\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0)\r\n    const [currentOptionSelected, setCurrentOptionSelected] = useState(null);\r\n    const [correctOption, setCorrectOption] = useState(null);\r\n    const [isOptionsDisabled, setIsOptionsDisabled] = useState(false);\r\n    const [score, setScore] = useState(0)\r\n    const [showNextButton, setShowNextButton] = useState(false)\r\n    const [showScoreModal, setShowScoreModal] = useState(false)\r\n\r\n    const validateAnswer = (selectedOption) => {\r\n        let correct_option = allQuestions[currentQuestionIndex]['correct_option'];\r\n        setCurrentOptionSelected(selectedOption);\r\n        setCorrectOption(correct_option);\r\n        setIsOptionsDisabled(true);\r\n        if(selectedOption==correct_option){\r\n            // Set Score\r\n            setScore(score+allQuestions[currentQuestionIndex]['correct_score'])\r\n        }\r\n        // Show Next Button\r\n        setShowNextButton(true)\r\n    }\r\n    const handleNext = () => {\r\n        if(currentQuestionIndex== allQuestions.length-1){\r\n            // Last Question\r\n            // Show Score Modal\r\n            setShowScoreModal(true)\r\n        }else{\r\n            setCurrentQuestionIndex(currentQuestionIndex+1);\r\n            setCurrentOptionSelected(null);\r\n            setCorrectOption(null);\r\n            setIsOptionsDisabled(false);\r\n            setShowNextButton(false);\r\n        }\r\n        Animated.timing(progress, {\r\n            toValue: currentQuestionIndex+1,\r\n            duration: 1000,\r\n            useNativeDriver: false\r\n        }).start();\r\n    }\r\n    const restartQuiz = () => {\r\n        setShowScoreModal(false);\r\n\r\n        setCurrentQuestionIndex(0);\r\n        setScore(0);\r\n\r\n        setCurrentOptionSelected(null);\r\n        setCorrectOption(null);\r\n        setIsOptionsDisabled(false);\r\n        setShowNextButton(false);\r\n        Animated.timing(progress, {\r\n            toValue: 0,\r\n            duration: 1000,\r\n            useNativeDriver: false\r\n        }).start();\r\n    }\r\n\r\n    const renderQuestion = () => {\r\n        return (\r\n            <View style={{\r\n                marginVertical: 40\r\n            }}>\r\n                {/* Question Counter */}\r\n                <View style={{\r\n                    flexDirection: 'row',\r\n                    alignItems: 'flex-end'\r\n                }}>\r\n                    <Text style={{color: COLORS.white, fontSize: 20, opacity: 0.6, marginRight: 2}}>{currentQuestionIndex+1}</Text>\r\n                    <Text style={{color: COLORS.white, fontSize: 18, opacity: 0.6}}>/ {allQuestions.length}</Text>\r\n                </View>\r\n\r\n                {/* Question */}\r\n                <Text style={{\r\n                    color: COLORS.white,\r\n                    fontSize: 30\r\n                }}>{allQuestions[currentQuestionIndex]?.question}</Text>\r\n            </View>\r\n        )\r\n    }\r\n    const renderOptions = () => {\r\n        return (\r\n            <View>\r\n                {\r\n                    allQuestions[currentQuestionIndex]?.options.map(option => (\r\n                        <TouchableOpacity \r\n                        onPress={()=> validateAnswer(option)}\r\n                        disabled={isOptionsDisabled}\r\n                        key={option}\r\n                        style={{\r\n                            borderWidth: 3, \r\n                            borderColor: option==correctOption \r\n                            ? COLORS.success\r\n                            : option==currentOptionSelected \r\n                            ? COLORS.error \r\n                            : COLORS.secondary+'40',\r\n                            backgroundColor: option==correctOption \r\n                            ? COLORS.success +'20'\r\n                            : option==currentOptionSelected \r\n                            ? COLORS.error +'20'\r\n                            : COLORS.secondary+'20',\r\n                            height: 60, borderRadius: 20,\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center', justifyContent: 'space-between',\r\n                            paddingHorizontal: 20,\r\n                            marginVertical: 10\r\n                        }}\r\n                        >\r\n                            <Text style={{fontSize: 20, color: COLORS.white}}>{option}</Text>\r\n\r\n                            {/* Show Check Or Cross Icon based on correct answer*/}\r\n                            {\r\n                                option==correctOption ? (\r\n                                    <View style={{\r\n                                        width: 30, height: 30, borderRadius: 30/2,\r\n                                        backgroundColor: COLORS.success,\r\n                                        justifyContent: 'center', alignItems: 'center'\r\n                                    }}>\r\n                                        <MaterialCommunityIcons name=\"check\" style={{\r\n                                            color: COLORS.white,\r\n                                            fontSize: 20\r\n                                        }} />\r\n                                    </View>\r\n                                ): option == currentOptionSelected ? (\r\n                                    <View style={{\r\n                                        width: 30, height: 30, borderRadius: 30/2,\r\n                                        backgroundColor: COLORS.error,\r\n                                        justifyContent: 'center', alignItems: 'center'\r\n                                    }}>\r\n                                        <MaterialCommunityIcons name=\"close\" style={{\r\n                                            color: COLORS.white,\r\n                                            fontSize: 20\r\n                                        }} />\r\n                                    </View>\r\n                                ) : null\r\n                            }\r\n\r\n                        </TouchableOpacity>\r\n                    ))\r\n                }\r\n            </View>\r\n        )\r\n    }\r\n    const renderNextButton = () => {\r\n        if(showNextButton){\r\n            return (\r\n                <TouchableOpacity\r\n                onPress={handleNext}\r\n                style={{\r\n                    marginTop: 20, width: '100%', backgroundColor: COLORS.accent, padding: 20, borderRadius: 5\r\n                }}>\r\n                    <Text style={{fontSize: 20, color: COLORS.white, textAlign: 'center'}}>Next</Text>\r\n                </TouchableOpacity>\r\n            )\r\n        }else{\r\n            return null\r\n        }\r\n    }\r\n\r\n\r\n    const [progress, setProgress] = useState(new Animated.Value(0));\r\n    const progressAnim = progress.interpolate({\r\n        inputRange: [0, allQuestions.length],\r\n        outputRange: ['0%','100%']\r\n    })\r\n    const renderProgressBar = () => {\r\n        return (\r\n            <View style={{\r\n                width: '100%',\r\n                height: 20,\r\n                borderRadius: 20,\r\n                backgroundColor: '#00000020',\r\n\r\n            }}>\r\n                <Animated.View style={[{\r\n                    height: 20,\r\n                    borderRadius: 20,\r\n                    backgroundColor: COLORS.accent\r\n                },{\r\n                    width: progressAnim\r\n                }]}>\r\n\r\n                </Animated.View>\r\n\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        \r\n           <SafeAreaView style={{flex: 1}}>\r\n           \r\n           <StatusBar barStyle=\"light-content\" backgroundColor={COLORS.primary} />\r\n           <View style={{\r\n               flex: 1,\r\n               paddingVertical: 40,\r\n               paddingHorizontal: 16,\r\n               backgroundColor: COLORS.background,\r\n               position:'relative'\r\n           }}>\r\n               <Text style={{fontSize: 40, fontWeight: 'bold',textAlign:\"center\",color:COLORS.secondary}}>Your Score </Text>\r\n               <Text style={{fontSize: 40, fontWeight: 'bold',textAlign:\"center\", color:COLORS.error}}>{ context.user.score}</Text>\r\n               {/* ProgressBar */}\r\n               { renderProgressBar() }\r\n\r\n               {/* Question */}\r\n               {renderQuestion()}\r\n\r\n               {/* Options */}\r\n               {renderOptions()}\r\n\r\n               {/* Next Button */}\r\n               {renderNextButton()}\r\n\r\n               {/* Score Modal */}\r\n               <Modal\r\n               animationType=\"slide\"\r\n               transparent={true}\r\n               visible={showScoreModal}\r\n               >\r\n                   <View style={{\r\n                       flex: 1,\r\n                       backgroundColor: COLORS.primary,\r\n                       alignItems: 'center',\r\n                       justifyContent: 'center'\r\n                   }}>\r\n                       <View style={{\r\n                           backgroundColor: COLORS.white,\r\n                           width: '90%',\r\n                           borderRadius: 20,\r\n                           padding: 20,\r\n                           alignItems: 'center'\r\n                       }}>\r\n                           <Text style={{fontSize: 40, fontWeight: 'bold',textAlign:\"center\"}}>{ score> (allQuestions.length/2) ? 'Congratulations! your score' : 'Oops!' }</Text>\r\n\r\n                           <View style={{\r\n                               flexDirection: 'row',\r\n                               justifyContent: 'flex-start',\r\n                               alignItems: 'center',\r\n                               marginVertical: 20\r\n                           }}>\r\n                               <Text style={{\r\n                                   fontSize: 30,\r\n                                   color: score> (allQuestions.length/2) ? COLORS.success : COLORS.error\r\n                               }}>{score}</Text>\r\n                                <Text style={{\r\n                                    fontSize: 20, color: COLORS.black\r\n                                }}>/ { allQuestions.length }</Text>\r\n                           </View>\r\n                           {/* Retry Quiz button */}\r\n                           <TouchableOpacity\r\n                           onPress={restartQuiz}\r\n                           style={{\r\n                               backgroundColor: COLORS.accent,\r\n                               padding: 20, width: '100%', borderRadius: 20\r\n                           }}>\r\n                               <Text style={{\r\n                                   textAlign: 'center', color: COLORS.white, fontSize: 20\r\n                               }}>Retry Quiz</Text>\r\n                           </TouchableOpacity>\r\n\r\n                       </View>\r\n\r\n                   </View>\r\n               </Modal>\r\n\r\n               {/* Background Image */}\r\n               <Image\r\n                source={require('../assets/images/DottedBG.png')}\r\n                style={{\r\n                    width: SIZES.width,\r\n                    height: 130,\r\n                    zIndex: -1,\r\n                    position: 'absolute',\r\n                    bottom: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    opacity: 0.5\r\n                }}\r\n                resizeMode={'contain'}\r\n                />\r\n\r\n           </View>\r\n       </SafeAreaView>\r\n      \r\n    )\r\n}\r\n\r\nexport default Quiz\r\n"]},"metadata":{},"sourceType":"script"}